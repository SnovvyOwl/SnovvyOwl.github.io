<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<channel>
		<title>{SnowyOwl}</title>
		<description>Blog and website of SnowyOwl, blogging mainly for Embedded System, Robotics, Dynamics modeling, Control Theory, Computer Vistion, ML, DL and RL Opinions expressed are mine.</description>
		<link>https://SnovvyOwl.github.io</link>
		<atom:link href="https://SnovvyOwl.github.io/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Analyzing Systems with Python Control System Library</title>
				
				
					<description>&lt;p&gt;우리 학교 기계공학과에서 각종 프로젝트를 진행하게 되면 각종 수치 계산을 포함해서 간단한 프로그래밍 전부 MATLAB에 의존하는 경우가 많다.
물론 MATLAB이 사용하기 쉽고 편하다는 사실은 부정할 수 없다. 하지만 MATLAB에겐 치명적인 단점이 있는데 이는 MATLAB이 유료라는 사실이다.&lt;br /&gt;
각 종 라이브러리도 전부다 사야하고 필요한 툴박스를 구매하기 위한 비용을 생각 하지 않을 수 없다.&lt;br /&gt;
결국 MATLAB이라는 유료 플랫폼을 거칠 수 없는 환경이 결국 왔을 때 이 한계는 크게 느껴질 것이라고 생각한다.&lt;/p&gt;
</description>
				
				<pubDate>Fri, 27 Aug 2021 00:00:00 +0900</pubDate>
				<link>https://SnovvyOwl.github.io/dynamics%20and%20control/2021/08/27/Analyzing-Systems-with-Python-Control-System-Library.html</link>
				<guid isPermaLink="true">https://SnovvyOwl.github.io/dynamics%20and%20control/2021/08/27/Analyzing-Systems-with-Python-Control-System-Library.html</guid>
			</item>
		
			<item>
				<title>Method of Calculating a Governing  Equation by Lagrangian Dynamics Using Python</title>
				
				
					<description>&lt;p&gt;로봇에 대해 공부하다보면 정형화된 6축 매뉴퓰레이터가 아닌 다양한 로봇을 설계할 때가 있다.
프로젝트로 진행하고 있는 공모양 로봇이 그중 하나이다.
이러한 로봇을 제어하는 로직을 짜거나 칼만필터를 사용하기 위해서는 로봇을 동역학(Dynamics)적으로 해석할 필요가 있다.&lt;br /&gt;
로봇은 여러게의 요소가 연결되어 있어서 다물체 동역학(Multibody Dynamics)이다.&lt;br /&gt;
이러한 다물체로 이루어진 시스템을 해석하는 방법으로는 가장 기본적으로 쓰이는 뉴턴방식, 가상일 (Virtual Works), 라그랑주 역학(Lagrangian Dynamics)의 방식이 있다.&lt;br /&gt;
뉴턴방식은 간단한 시스템에서 주로 쓰이고 로봇과 같은 복잡한 시스템은 가상일과 라그랑주 역학으로 해석을 하게 된다.&lt;br /&gt;
그중 라그랑주 역학은 내력을 구할 필요가 없는 장점이 있다.&lt;br /&gt;
우리의 시스템도 라그랑주 역학으로 해석하기로 했다.&lt;/p&gt;
</description>
				
				<pubDate>Thu, 26 Aug 2021 00:00:00 +0900</pubDate>
				<link>https://SnovvyOwl.github.io/dynamics%20and%20control/2021/08/26/Method-of-Calculating-a-Dominant-Equation-by-Lagrangian-Dynamics-Using-Python.html</link>
				<guid isPermaLink="true">https://SnovvyOwl.github.io/dynamics%20and%20control/2021/08/26/Method-of-Calculating-a-Dominant-Equation-by-Lagrangian-Dynamics-Using-Python.html</guid>
			</item>
		
			<item>
				<title>Calculate Matrix by openCV mat class[cv::Mat]</title>
				
				
					<description>&lt;p&gt;KHU-KongBot2 프로젝트를 진행하다보니 센서의 데이터와 실제 로봇의 모델을 계산해서 현재의 로봇의 상태를 추정하는 칼만필터를 사용할 필요가 생겼다.&lt;/p&gt;
</description>
				
				<pubDate>Thu, 26 Aug 2021 00:00:00 +0900</pubDate>
				<link>https://SnovvyOwl.github.io/khu-kongbot/2021/08/26/Calculate-Matrix-by-openCV-mat-class.html</link>
				<guid isPermaLink="true">https://SnovvyOwl.github.io/khu-kongbot/2021/08/26/Calculate-Matrix-by-openCV-mat-class.html</guid>
			</item>
		
			<item>
				<title>Socket Communication for Linux</title>
				
				
					<description>&lt;p&gt;KHU-Kongbot2 Project를 진행하면서 객체지향적 요소를 왠만하면 넣지 않을라고 했다. 이유는 함께하는 기계과 친구들이 객체지향보다 절차지향적인 코드에 익숙했기 때문이다.&lt;/p&gt;
</description>
				
				<pubDate>Wed, 25 Aug 2021 00:00:00 +0900</pubDate>
				<link>https://SnovvyOwl.github.io/khu-kongbot/2021/08/25/Socket-Communication.html</link>
				<guid isPermaLink="true">https://SnovvyOwl.github.io/khu-kongbot/2021/08/25/Socket-Communication.html</guid>
			</item>
		
			<item>
				<title>Encoder sensing Code with Raspberry Pi</title>
				
				
					<description>&lt;p&gt;[C/C++] 라즈베리파이로 엔코더의 각도측정 및 각속도 계산  Raspberry Pi&lt;/p&gt;
</description>
				
				<pubDate>Fri, 01 May 2020 00:00:00 +0900</pubDate>
				<link>https://SnovvyOwl.github.io/khu-kongbot/2020/05/01/encoder-reading.html</link>
				<guid isPermaLink="true">https://SnovvyOwl.github.io/khu-kongbot/2020/05/01/encoder-reading.html</guid>
			</item>
		
			<item>
				<title>Using C++ for MultiThread processing</title>
				
				
					<description>&lt;p&gt;요즘 개인적으로 라즈베리파이로 학부 졸업논문으로 만들었던 공 로봇을 다시 처음부터 만들어서 제대로 만들어보려고 하고 있다,&lt;/p&gt;
</description>
				
				<pubDate>Tue, 24 Mar 2020 00:00:00 +0900</pubDate>
				<link>https://SnovvyOwl.github.io/khu-kongbot/2020/03/24/Raspberry-PI-with-C++.html</link>
				<guid isPermaLink="true">https://SnovvyOwl.github.io/khu-kongbot/2020/03/24/Raspberry-PI-with-C++.html</guid>
			</item>
		
	</channel>
</rss>
